// Generated by CoffeeScript 1.6.3
(function() {
  var sabisu;

  sabisu = angular.module('sabisu', []);

  sabisu.config(function($locationProvider) {
    return $locationProvider.html5Mode(true);
  });

  sabisu.filter('joinBy', function() {
    return function(input, delimiter) {
      return (input || []).join(delimiter || ',');
    };
  });

  sabisu.factory('eventsFactory', function($log, $http) {
    var factory;
    factory = {};
    factory.searchEvents = function(search_query, sort, limit) {
      if (!(sort === "issued" || sort === "status")) {
        sort = sort + '<string>';
      }
      sort = "[\"" + sort + "\"]";
      if (search_query === '') {
        return $http({
          method: 'GET',
          url: '/api/events',
          params: {
            limit: limit,
            sort: sort,
            include_docs: true
          }
        });
      } else {
        return $http({
          method: 'GET',
          url: '/api/events/search',
          params: {
            query: search_query,
            limit: limit,
            sort: sort,
            include_docs: true
          }
        });
      }
    };
    return factory;
  });

  sabisu.controller('eventsController', function($scope, $log, $location, eventsFactory) {
    $scope.events = [];
    $scope.events_spin = false;
    $scope.bulk = 'show';
    if ($location.search().query != null) {
      $scope.search_field = $location.search().query;
    } else {
      $scope.search_field = '';
    }
    if ($location.search().sort != null) {
      $scope.sort = $location.search().sort;
    } else {
      $scope.sort = 'client';
    }
    if ($location.search().limit != null) {
      $scope.limit = $location.search().limit;
    } else {
      $scope.limit = '50';
    }
    $scope.updateEvents = function() {
      $scope.events = [];
      $scope.events_spin = true;
      $location.search('query', $scope.search_field);
      $location.search('sort', $scope.sort);
      $location.search('limit', $scope.limit);
      return eventsFactory.searchEvents($scope.search_field, $scope.sort, $scope.limit).success(function(data, status, headers, config) {
        var color, event, events, _i, _len, _ref;
        color = ['success', 'warning', 'danger', 'info'];
        status = ['OK', 'Warning', 'Critical', 'Unknown'];
        events = [];
        if ('bookmark' in data) {
          $scope.bookmark = data['bookmark'];
        }
        if ('count' in data) {
          $scope.count = data['count'];
        }
        if ('events' in data) {
          _ref = data['events'];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            event = _ref[_i];
            event = angular.fromJson(event);
            event['id'] = Math.floor(Math.random() * 100000000000);
            event['color'] = color[event['check']['status']];
            event['wstatus'] = status[event['check']['status']];
            event['rel_time'] = "2 hours ago";
            event['check']['issued'] = Date(event['check']['issued'] * 1000);
            events.push(event);
          }
          $scope.events_spin = false;
          return $scope.events = events;
        }
      });
    };
    $scope.updateEvents();
    $scope.bulkToggleDetails = function() {
      var event, _i, _len, _ref, _results;
      _ref = $scope.events;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        event = _ref[_i];
        _results.push($("#" + event['id']).collapse($scope.bulk));
      }
      return _results;
    };
    $('.collapse').on('hide.bs.collapse', function() {
      $scope.bulk = 'show';
      $(this).parent().find('.toggleBtn').removeClass('glyphicon-collapse-up');
      return $(this).parent().find('.toggleBtn').addClass('glyphicon-collapse-down');
    });
    $('.collapse').on('show.bs.collapse', function() {
      $scope.bulk = 'hide';
      $(this).parent().find('.toggleBtn').removeClass('glyphicon-collapse-down');
      return $(this).parent().find('.toggleBtn').addClass('glyphicon-collapse-up');
    });
    return $scope.toggleDetails = function(id) {
      return $("#" + id).collapse('toggle');
    };
  });

}).call(this);
