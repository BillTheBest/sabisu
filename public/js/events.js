// Generated by CoffeeScript 1.6.3
(function() {
  var sabisu;

  sabisu = angular.module('sabisu', []);

  sabisu.factory('eventsFactory', function($log, $http) {
    var factory;
    factory = {};
    factory.searchEvents = function() {
      $log.info('searching for events');
      if ($("#search").val() === '') {
        return $http({
          method: 'GET',
          url: '/api/events',
          params: {
            limit: 10
          }
        });
      } else {
        return $http({
          method: 'GET',
          url: '/api/events/search',
          params: {
            query: $("#search").val(),
            limit: 10
          }
        });
      }
    };
    return factory;
  });

  sabisu.controller('eventsController', function($scope, $log, eventsFactory) {
    var updateEvents;
    $scope.events = [];
    updateEvents = function() {
      return eventsFactory.searchEvents().success(function(data, status, headers, config) {
        var color, event, events, _i, _len;
        color = ['success', 'warning', 'danger', 'info'];
        events = [];
        for (_i = 0, _len = data.length; _i < _len; _i++) {
          event = data[_i];
          event = angular.fromJson(event);
          event['id'] = Math.floor(Math.random() * 100000000000);
          event['color'] = color[event['status']];
          if (event['color'] == null) {
            event['color'] = color[0];
          }
          event['rel_time'] = "2 hours ago";
          event['dotdotdot'] = '';
          event['short_output'] = '';
          if (event['output'] != null) {
            event['short_output'] = event['output'].slice(0, 101);
            if (event['output'].length > 100) {
              event['dotdotdot'] = '...';
            }
          }
          events.push(event);
        }
        $log.info('got events');
        $log.info(events);
        return $scope.events = events;
      });
    };
    updateEvents();
    return $scope.toggleDetails = function(id) {
      $log.info("toggle " + id);
      return $("#" + id).collapse('toggle');
    };
  });

}).call(this);
